<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>text</title>
      <link href="/2020/04/20/text/"/>
      <url>/2020/04/20/text/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>如何配一副眼镜</title>
      <link href="/2020/04/11/ru-he-pei-yi-fu-yan-jing/"/>
      <url>/2020/04/11/ru-he-pei-yi-fu-yan-jing/</url>
      
        <content type="html"><![CDATA[<h2 id="如何配一幅👓"><a href="#如何配一幅👓" class="headerlink" title="如何配一幅👓"></a>如何配一幅👓</h2><blockquote><ol><li>眼镜店 (贵)</li><li>医院 (贵)</li><li>网购 (便宜)</li></ol></blockquote><h3 id="通过网购配镜"><a href="#通过网购配镜" class="headerlink" title="通过网购配镜"></a>通过网购配镜</h3><h5 id="1-首先要拿到验光单"><a href="#1-首先要拿到验光单" class="headerlink" title="1. 首先要拿到验光单"></a>1. 首先要拿到验光单</h5><p> 你以为是这样的吗？</p><img src="https://gitee.com/Java1123yanglei/myPicture/raw/master/uPic/验光1_2.jpg" style="zoom:10%;" align=center><p>以下是我把该图片发给淘宝上的一些大一点的眼镜店的回复(直接劝我买的被略掉了)</p><blockquote><ol><li>帕森旗舰店<br> 验光仪器上出来的单子仅供配镜师参考，不可用于实际配镜数据。在配镜过程中，配镜师会使 用度数不同的插片进行测量您眼睛的准确度数，所以配镜师手写的单子才可作为配镜数据哦。   </li><li>宝岛眼镜<br>这是电脑的数据哦，只是验光的第一步。 配镜需要经过插片测试、试戴度数等步骤， 最终验光师手写的验光数据，才适合用于您配镜的呢 </li><li>pulais<br> 亲 你这个是机打的单子可能是不准确的哈</li><li>博士眼镜 良心大大的好<img src="https://gitee.com/Java1123yanglei/myPicture/raw/master/uPic/SAVE_20200411_200224.jpg" style="zoom:40%" align=top  ></li></ol></blockquote><hr><p><em>cao,傻逼医院害我，检测花了30块，只给了一个机器的单子，还tm一个劲劝我去医院配</em></p><blockquote><p>2020年4月11日下午3点，我又去了一家医院  邓州市人民医院北区，3楼眼科，我等了2个小时终于在5点见到了大夫，然后大夫说，只有在医院买眼镜才给验光，否则就不给，去门诊举报，领导不在，让我等到工作日再过来，打卫生局电话说他们处理不了，是医院内部的事情🐶</p></blockquote><blockquote><p>2020年4月11日晚，到了南阳市，打算明天去医院验光</p></blockquote><p>有眼光单了</p><blockquote><p><a href="https://gitee.com/Java1123yanglei/myPicture/raw/master/uPic/验光单.pdf" target="_blank" rel="noopener">验光单</a></p></blockquote><h5 id="2-淘宝购买"><a href="#2-淘宝购买" class="headerlink" title="2. 淘宝购买"></a>2. 淘宝购买</h5><ol><li>把验光单发给淘宝眼镜店的客服人员</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac 安装maven</title>
      <link href="/2020/04/10/mac-an-zhuang-maven/"/>
      <url>/2020/04/10/mac-an-zhuang-maven/</url>
      
        <content type="html"><![CDATA[<h2 id="Mac-下载安装maven"><a href="#Mac-下载安装maven" class="headerlink" title="Mac 下载安装maven"></a>Mac 下载安装maven</h2><blockquote><p><a href="https://www.liaoxuefeng.com/wiki/1252599548343744/1255945359327200" target="_blank" rel="noopener">什么是maven</a></p></blockquote><hr><h3 id="下载安装-maven"><a href="#下载安装-maven" class="headerlink" title="下载安装 maven"></a>下载安装 maven</h3><blockquote><p>使用brew ，什么是<a href="https://brew.sh/index_zh-cn" target="_blank" rel="noopener">brew</a></p></blockquote><ol><li><p>安装</p><pre class=" language-shell"><code class="language-shell"> brew install maven # 安装命令</code></pre></li><li><p>检查是否安装成功</p><pre class=" language-shell"><code class="language-shell">mvn -v</code></pre></li><li><p>若成功输出如下</p><pre class=" language-shell"><code class="language-shell"># 测试是否安装成功,成功则输出如下:Maven home: /usr/local/Cellar/maven/3.6.3_1/libexecJava version: 13, vendor: Oracle Corporation, runtime: /Library/Java/JavaVirtualMachines/jdk-13.jdk/Contents/HomeDefault locale: zh_CN_#Hans, platform encoding: UTF-8OS name: "mac os x", version: "10.15.4", arch: "x86_64", family: "mac"</code></pre></li></ol><hr>]]></content>
      
      
      
        <tags>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查看和下载码云文件</title>
      <link href="/2020/03/30/cha-kan-he-xia-zai-ma-yun-wen-jian/"/>
      <url>/2020/03/30/cha-kan-he-xia-zai-ma-yun-wen-jian/</url>
      
        <content type="html"><![CDATA[<h2 id="下载和查看码云文件"><a href="#下载和查看码云文件" class="headerlink" title="下载和查看码云文件"></a>下载和查看码云文件</h2><blockquote><p> <a href="https://gitee.com/help" target="_blank" rel="noopener">什么是码云</a></p></blockquote><h3 id="一、查看或下载单个文件"><a href="#一、查看或下载单个文件" class="headerlink" title="一、查看或下载单个文件"></a>一、查看或下载单个文件</h3><ul><li><p>打开码云仓库地址，例如 <a href="https://gitee.com/Java1123yanglei/javase_26" target="_blank" rel="noopener">我的仓库</a></p></li><li><p>如下图 <img src="https://i.loli.net/2020/03/30/9DujvtHxPbA6Bys.png" alt="红色的框是资源区"></p></li><li><p>我们需要的资源都在红框这个地方，比如我们要下载思维导图，脑图存放在Javaxmind 这个文件夹中</p></li></ul><p><img src="https://i.loli.net/2020/03/30/k8pFWNAcTB6Lrle.png" alt="点击JavaXmind这个文件夹"></p><p><img src="https://i.loli.net/2020/03/30/5vLwV9Xh3THrQKN.png" alt="这是思维导图文件夹中的内容"></p><ul><li>例如 需要下载面向对象总结这个脑图文件 (XXXX.xmind的文件)<br><img src="https://i.loli.net/2020/03/30/T9lcSFzmr5Jyd6k.png" alt="点击 面向对象总结.xmind"><br><img src="https://i.loli.net/2020/03/30/fvyqL5Np6GnucdC.png" alt="点击 下载"></li><li>若显示 如下界面，注册一个码云账号就行了<br><img src="https://i.loli.net/2020/03/30/H1gwshc92lOPIWX.png" alt="注册并登陆账号就可以下载"><blockquote><p><a href="https://www.xmind.cn" target="_blank" rel="noopener">什么是脑图，如何打开</a> </p></blockquote></li></ul><hr><h3 id="二、下载整个项目"><a href="#二、下载整个项目" class="headerlink" title="二、下载整个项目"></a>二、下载整个项目</h3><h6 id="1、windows"><a href="#1、windows" class="headerlink" title="1、windows"></a>1、windows</h6><ol><li><a href="https://blog.csdn.net/qq_32786873/article/details/80570783" target="_blank" rel="noopener">下载和安装git</a></li><li>安装完成后，在开始菜单找到 “Git” -&gt; “Git Bash”,会跳出类似命令行窗口的东西，就说明Git安装完成<br><img src="https://www.liaoxuefeng.com/files/attachments/919018718363424/0" alt="窗口"></li><li>复制项目的地址<br><img src="https://gitee.com/Java1123yanglei/myPicture/raw/master/uPic/vfnhM8.png" alt="点击复制"></li><li>通过 git clone 下载仓库<pre class=" language-shell"><code class="language-shell">git clone 项目地址</code></pre></li><li>或者直接下载zip文件<br><img src="https://i.loli.net/2020/03/30/mYyOHrR4hNC9D6g.png" alt="点击下载，注意需要先登录"><h6 id="1、Mac"><a href="#1、Mac" class="headerlink" title="1、Mac"></a>1、Mac</h6></li><li>下载和安装homebrew<blockquote><p>通过 <a href="https://brew.sh/" target="_blank" rel="noopener">homebrew安装git</a></p></blockquote></li><li>下载 git(前提是homebrew安装)<pre class=" language-shell"><code class="language-shell">brew install git</code></pre></li><li>检查git是否安装成功<pre class=" language-shell"><code class="language-shell">git --version# 若输出如下内容，说明安装成功# git version 2.23.0</code></pre>获取项目地址<br><img src="https://gitee.com/Java1123yanglei/myPicture/raw/master/uPic/vfnhM8.png" alt="点击复制"></li></ol><p>通过git clone 下载仓库，打开终端</p><pre class=" language-shell"><code class="language-shell">git clone 项目地址</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 码云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>白嫖freenom域名,使用dnspod配置</title>
      <link href="/2020/03/03/bai-piao-freenom-yu-ming-shi-yong-dnspod-pei-zhi/"/>
      <url>/2020/03/03/bai-piao-freenom-yu-ming-shi-yong-dnspod-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h3 id="使用freedom白嫖域名，使用腾讯云的dnspod配置（都是免费的）"><a href="#使用freedom白嫖域名，使用腾讯云的dnspod配置（都是免费的）" class="headerlink" title="使用freedom白嫖域名，使用腾讯云的dnspod配置（都是免费的）"></a>使用freedom白嫖域名，使用腾讯云的dnspod配置（都是免费的）</h3><h5 id="获取freedom域名"><a href="#获取freedom域名" class="headerlink" title="获取freedom域名"></a>获取freedom域名</h5>]]></content>
      
      
      
        <tags>
            
            <tag> 域名 freedom 白嫖 dnspod </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac idea导入mysql</title>
      <link href="/2020/03/03/mac-idea-dao-ru-mysql/"/>
      <url>/2020/03/03/mac-idea-dao-ru-mysql/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="Mac-IDEA-导入MySql"><a href="#Mac-IDEA-导入MySql" class="headerlink" title="Mac IDEA 导入MySql"></a>Mac IDEA 导入MySql</h1><hr><h3 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h3><p>从<a href="https://dev.mysql.com/downloads/connector/j/" target="_blank" rel="noopener">MySql</a>下载zip包，解压后得到jar文件</p><hr><h3 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h3><p>在项目目录新建一个lib目录，把jar文件放在里面</p><hr><h3 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h3><p>添加到path<br>文件 -&gt; 项目结构(cmd+;) -&gt; 模块 -&gt; 项目名称 -&gt; 依赖 -&gt; 添加(加号) -&gt; 选择jars或目录 -&gt; 选择 lib下的jar文件 -&gt; 应用 -&gt; 确定<br><img src="https://img-blog.csdnimg.cn/20191206110900598.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1lhbmdsZWlfMQ==,size_16,color_FFFFFF,t_70" alt="添加完成"></p><hr><h1 id="数据库链接"><a href="#数据库链接" class="headerlink" title="数据库链接"></a>数据库链接</h1><hr><h3 id="第一步-找到"><a href="#第一步-找到" class="headerlink" title="第一步 找到"></a>第一步 找到</h3><p>点击Database 选择 ➕ 号<br><img src="https://img-blog.csdnimg.cn/20191206111444864.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1lhbmdsZWlfMQ==,size_16,color_FFFFFF,t_70" alt="添加"></p><hr><h3 id="第二步-添加"><a href="#第二步-添加" class="headerlink" title="第二步 添加"></a>第二步 添加</h3><p>选择  Date Source -&gt; 数据库类型 我的是mysql<br><img src="https://img-blog.csdnimg.cn/20191206111646142.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1lhbmdsZWlfMQ==,size_16,color_FFFFFF,t_70" alt="添加"></p><hr><h3 id="第三步-设置"><a href="#第三步-设置" class="headerlink" title="第三步 设置"></a>第三步 设置</h3><p>Name :自定义添加数据库名字<br>Host：主机名，我用的是localhost<br>Port: 端口<br>User：用户名<br>Password: 密码<br>Save ： 选择是否保存密码<br>Database:数据库名</p><p>TEST CONNECTION ： 链接测试，点一下试一下，会下载文件</p><p><img src="https://img-blog.csdnimg.cn/20191206111821831.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1lhbmdsZWlfMQ==,size_16,color_FFFFFF,t_70" alt="设置"></p><hr><h3 id="第四步-保存并且应用"><a href="#第四步-保存并且应用" class="headerlink" title="第四步 保存并且应用"></a>第四步 保存并且应用</h3><p>应用 -&gt; 确定</p>]]></content>
      
      
      
        <tags>
            
            <tag> mac idea mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idea导入algs4</title>
      <link href="/2020/03/03/idea-dao-ru-algs4/"/>
      <url>/2020/03/03/idea-dao-ru-algs4/</url>
      
        <content type="html"><![CDATA[<ol><li>下载 algs4.jar 文件</li><li>在～目录创建algs4文件，把algs4.jar放进群</li><li>在～目录下编辑  ~/.bash_profile</li><li>把 export CLASSPATH=$CLASSPATH:~/algs4/algs4.jar 添加到最后</li><li>为项目添加jar包 点击file&gt;Project Structure&gt;模块&gt;+号&gt;jar文件&gt;选择刚添加的文件<br><img src="https://img-blog.csdnimg.cn/2019111819101331.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1lhbmdsZWlfMQ==,size_16,color_FFFFFF,t_70" alt="点击文件-&gt;项目结构"><br><img src="https://img-blog.csdnimg.cn/20191118191313468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1lhbmdsZWlfMQ==,size_16,color_FFFFFF,t_70" alt="点击➕号"><br><img src="https://img-blog.csdnimg.cn/20191118191453878.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1lhbmdsZWlfMQ==,size_16,color_FFFFFF,t_70" alt="选择文件"></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> idea mac algs4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>创建博客</title>
      <link href="/2020/03/02/chuang-jian-bo-ke/"/>
      <url>/2020/03/02/chuang-jian-bo-ke/</url>
      
        <content type="html"><![CDATA[<h3 id="在mac上使用hexo-和-github-创建博客"><a href="#在mac上使用hexo-和-github-创建博客" class="headerlink" title="在mac上使用hexo 和 github 创建博客"></a>在mac上使用hexo 和 github 创建博客</h3><h5 id="一、-配置hexo"><a href="#一、-配置hexo" class="headerlink" title="一、 配置hexo"></a>一、 配置hexo</h5><ul><li><p>前提 有 node.js 和 git</p><pre class=" language-shell"><code class="language-shell"># 安装nodebrew insatll node brew insatll git# 测试，查看版本node -vnpm -v  git --version</code></pre><blockquote><p><a href="https://brew.sh/" target="_blank" rel="noopener">brew</a>,软件包的管理器</p><br></blockquote></li><li><p>安装 Hexo</p><pre class=" language-shell"><code class="language-shell"># 安装npm install -g hexo-cli# 查看版本hexo -v</code></pre></li><li><p>配置 hexo</p><pre class=" language-shell"><code class="language-shell"># 创建一个目录，放博客文件mkdir blog# cd 到 blog目录cd blog# 初始化目录hexo init# 补全文件npm install</code></pre></li><li><p>测试hexo</p><pre class=" language-shell"><code class="language-shell"># 生成静态网页heox g# 本地预览,关闭用control+c hexo s# 打开浏览器 输入 localist:4000/ 查看博客</code></pre></li></ul><hr><h4 id="二、关联GitHub"><a href="#二、关联GitHub" class="headerlink" title="二、关联GitHub"></a>二、关联GitHub</h4><ul><li>首先你要有一个GitHub账号<blockquote><p><a href="https://wiki.jikexueyuan.com/project/github-basics/sign-up.html" target="_blank" rel="noopener">注册教程</a></p></blockquote></li><li><a href="https://github.com" target="_blank" rel="noopener">打开登陆你GitHub账号</a></li><li>点击右上角头像旁边的”+”号，选择 “New repository”</li><li>填写表单<ol><li>“Repository name” 填 你的账户名.github.io</li><li>“Description” 项目描述，随便写</li><li>“public or private” 公开还是私有随便选</li><li>“README” 也勾选上</li></ol></li><li>关联GitHub和本地hexo博客<ol><li>打开GitHub，点击头像，点击settings</li><li>点击 “SSH and GPG keys” ，点击 “New SSH key”</li><li>“title” 随便写，停在key这里<pre class=" language-shell"><code class="language-shell"># 本地生成ssh keyssh-keygen -t rsa -C "随便输入点啥"# 查看ssh key, 把此时的输出内容放在 key 那边cat ~/.ssh/id_rsa.pub# 测试，如果出现你的用户名，则是成功了ssh -T git@github.com# 打开博客根目录下的_config.yml 文件vim _config.yml# 修改最后一行的配置，把 repo后的网址改为你的github项目的地址deploy:type: gitrepo: git@github.com:1123Javayanglei/1123Javayanglei.github.io.gitbranch: master</code></pre></li></ol></li></ul><hr><h4 id="三、写文章、发布文章"><a href="#三、写文章、发布文章" class="headerlink" title="三、写文章、发布文章"></a>三、写文章、发布文章</h4><pre class=" language-shell"><code class="language-shell"># 写文章hexo n "标题"# 会在 bolg/sourse/_posts 下生成一个 "标题".md 的文件，写他# 生成静态网页hexo g# 发布到git ，输入 用户名.github.io 就可以访问了hexo d</code></pre><hr><h4 id="四、参考"><a href="#四、参考" class="headerlink" title="四、参考"></a>四、参考</h4><blockquote><p><a href="https://zhuanlan.zhihu.com/p/35668237" target="_blank" rel="noopener">知乎</a><br><a href="https://zhuanlan.zhihu.com/p/35668237" target="_blank" rel="noopener">hexo官网</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 博客 mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在mac终端中使用代理</title>
      <link href="/2020/03/02/zai-mac-zhong-duan-zhong-shi-yong-dai-li/"/>
      <url>/2020/03/02/zai-mac-zhong-duan-zhong-shi-yong-dai-li/</url>
      
        <content type="html"><![CDATA[<h4 id="1-下载和配置clashX"><a href="#1-下载和配置clashX" class="headerlink" title="1. 下载和配置clashX"></a>1. 下载和配置clashX</h4><ul><li><a href="https://github.com/Dreamacro/clash" target="_blank" rel="noopener">下载</a></li><li>安装</li><li><a href="https://renzhe.cloud/user/tutorial?os=mac&client=clashx" target="_blank" rel="noopener">配置(需要全局)</a></li></ul><hr><h4 id="2-找到clashX的配置文件"><a href="#2-找到clashX的配置文件" class="headerlink" title="2. 找到clashX的配置文件"></a>2. 找到clashX的配置文件</h4><ul><li>路径 /Users/用户名/.config/clash/config.yaml</li><li>查看 config.yaml文件 </li><li>找到 socks-port: 7891 (有用)</li></ul><hr><h4 id="3-下载安装-proxychains"><a href="#3-下载安装-proxychains" class="headerlink" title="3. 下载安装 proxychains"></a>3. 下载安装 proxychains</h4><pre class=" language-shell"><code class="language-shell"># 安装brew install proxychains-ng# 配置文件/usr/local/etc/proxychains.conf</code></pre><hr><h4 id="4-配置-proxychains"><a href="#4-配置-proxychains" class="headerlink" title="4.配置 proxychains"></a>4.配置 proxychains</h4><ol><li><p>关闭<a href="https://support.apple.com/zh-cn/HT204899" target="_blank" rel="noopener">SIP</a></p><ul><li>将mac关机</li><li>开机后按住 com+r，直到看到Apple标志或者旋转的地球</li><li>看到 实用工具</li><li>选择 实用工具 &gt; 终端</li><li>输入  csrutil disable</li><li>重启</li></ul></li><li><p>重启后，打开终端，输入 csrutil status</p><ul><li>若显示  System Integrity Protection status: disabled.(表明关闭成功)</li><li>若需要打开 SIP 终端输入 &gt; csrutil enable</li></ul></li><li><p>编辑 proxychains 的配置文件</p><pre class=" language-shell"><code class="language-shell"># 编辑vim  /usr/local/etc/proxychains.conf# 更改, 将结尾的的 socks4 127.0.0.1 9095 改为sorks5 127.0.0.1 7891 </code></pre></li></ol><hr><h4 id="5-常用方法"><a href="#5-常用方法" class="headerlink" title="5. 常用方法"></a>5. 常用方法</h4><pre class=" language-shell"><code class="language-shell"># 代理终端命令proxychains4 curl www.google.com# 全局代理Bash bashproxychains4 -q /bin/bash# 全局代理zsh bashproxychains4 -q /bin/zsh</code></pre><hr><h4 id="6-如果懒得输入这么多，可以给-proxychains4设置个别名"><a href="#6-如果懒得输入这么多，可以给-proxychains4设置个别名" class="headerlink" title="6. 如果懒得输入这么多，可以给 proxychains4设置个别名"></a>6. 如果懒得输入这么多，可以给 proxychains4设置个别名</h4><pre class=" language-shell"><code class="language-shell"># 设置别名alias fuck='proxychains4'# 如果是 zhs用户,则需要在 ~/.zhshrc  中添加别名vim ~/.zshrc</code></pre><hr><h4 id="参考"><a href="#参考" class="headerlink" title="参考:"></a>参考:</h4><blockquote><p><a href="https://www.sqlsec.com/2019/12/macos.html#toc-heading-15" target="_blank" rel="noopener">国光大佬</a></p><p><a href="https://sspai.com/post/55066" target="_blank" rel="noopener">少数派</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> mac git 终端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用码云间接解决国内gitClone太慢的方法</title>
      <link href="/2020/03/01/jie-jue-guo-nei-gitclone-tai-man-de-fang-fa/"/>
      <url>/2020/03/01/jie-jue-guo-nei-gitclone-tai-man-de-fang-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="解决git-clone-卡顿的问题"><a href="#解决git-clone-卡顿的问题" class="headerlink" title="解决git clone 卡顿的问题"></a>解决git clone 卡顿的问题</h2><blockquote><p>众所周知，国内因为不可描述的原因，git clone 特别卡,今天搞了很久，终于解决了，下面是方法</p></blockquote><hr><h5 id="第一步-把github项目迁移到码云"><a href="#第一步-把github项目迁移到码云" class="headerlink" title="第一步 把github项目迁移到码云"></a>第一步 把github项目迁移到码云</h5><ol><li>获取要迁移GitHub项目的 Web Url:在项目首页点击”clone or download”,点击复制就有了</li><li>在码云上新建一个项目: 在主页点击”+”，选择”从GitHub导入仓库”，填写”Git 仓库url地址”,就是刚复制的</li></ol><hr><h5 id="第二步-本地clone码云仓库"><a href="#第二步-本地clone码云仓库" class="headerlink" title="第二步 本地clone码云仓库"></a>第二步 本地clone码云仓库</h5><ol><li>复制码云仓库的web url地址</li><li>打开终端</li><li>进入想要放置项目的仓库</li><li>拉取<pre class=" language-shell"><code class="language-shell">git clone 码云仓库webUrl地址</code></pre></li><li>输入码云账号的用户名和密码</li></ol><hr><h5 id="第三步-迁移本地码云仓库到GitHub"><a href="#第三步-迁移本地码云仓库到GitHub" class="headerlink" title="第三步 迁移本地码云仓库到GitHub"></a>第三步 迁移本地码云仓库到GitHub</h5><ul><li>移除码云远端 <pre class=" language-shell"><code class="language-shell">git remote remove origin</code></pre></li><li>添加GitHub远端<pre class=" language-shell"><code class="language-shell">git remote add origin GitHub的webRul地址</code></pre><ul><li>推送到GitHub的master(若有多个分支则多次推送)<pre class=" language-shell"><code class="language-shell">git push -u origin master</code></pre></li></ul></li></ul><hr><blockquote><p>参考 <a href="https://blog.csdn.net/qq598535550/article/details/87870931" target="_blank" rel="noopener">https://blog.csdn.net/qq598535550/article/details/87870931</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
